var express = require('express');
var df = require('dateformat');
var passport = require('passport');
var router = express.Router();
var mysql = require('mysql');
var cfg = require('config');
var sqlhelper = require('mysqlhelper2');
var mailer = require('nodemailer');
var messageService;
var rle = require('rolechecker');

/// START ROUTE HP ADMIN (/)

router.get("/index.html",rle.isAdmin, function (req, resp) {
    // Si le user is defined 
    if (typeof req.user !== 'undefined') {
    // Rendu du twig avec les données username
        resp.render("admin/index.html.twig", {"username": req.user.username });
    }
    	// Sinon renvoi à la page login pour authentification
	    else {
	        resp.redirect("/login.html");
	    }
}); 

/// END ROUTE HP ADMIN (/)

/// START ROUTE INDEX 

router.get("/",rle.isAdmin, function (req, resp) {
    // Route des "/admin" et redirige sur la route principale de admin
    resp.redirect("/admin/index.html");
});

/// END ROUTE INDEX 

/// START ROUTE LOGOUT ADMIN

router.get("/logout.html", function (req, resp) {
    // Fin de la session de connexion
    req.logout();
    // Redirection "/"
    resp.redirect("/");
});

/// END ROUTE LOGOUT ADMIN

/// START ROUTE DATA TABLES GESTION DES MAILS

router.get("/message.html", function(req,resp) {
    // Variable message à utiliser dans les logs
    var message = null;
    // On sélectionne tous les messages de la table cyrcontact_form quand ils ne sont pas résolus, triés par date
    sqlhelper.pool.query("SELECT * FROM cyrcontact_form WHERE resolved=0 ORDER BY creationdate ASC",function(err, rows, fields){
        //console.log("err :" + err);
        // Si il y a une erreur (err  différente de null)
        if (err != null) {
            console.log('QUERY DATA TABLES GESTION DES MAILS '+message + ' ----- ' + err);
        }
	        else {
	            // Sinon il n'y a pas d'erreur
	            message = "La recuperation des données c'est bien passée ";
	            console.log('QUERY DATA TABLES GESTION DES MAILS REUSSIE : ' + message);
	        }
	        //on log pour voir le mesage si il passe en fin de connection
	        //console.log('connection end ' + message);
	        //fin de connection    
	
	        	// Si le user est loggué
		        if (typeof req.user !== 'undefined') {
		            // Alors je renvoie le twig avec username (Welcome 'username') et le tableau des mails à afficher
		            resp.render("admin/message.html.twig", { "username": req.user.username,"form_email": rows });
		        }
		        	// Sinon je renvoie le user à la page login pour authentification
			        else {
			            resp.redirect("/login.html");
			        }
    });
});

/// END ROUTE ROUTE DATA TABLES GESTION DES MAILS

/// START ROUTE AFFICHAGE DES MAILS

router.get("/resolvemessage/:id/:email", function (req,resp){
	// Pour récupérer le mail
    // on initialise la variable message à null
    var message = null;
    var id = req.params.id;
    var lastEmail = req.params.email;
    
console.log('/// START ROUTE AFFICHAGE DES MAILS'); 
    
    // Traitement du message recupéré par son id
    sqlhelper.pool.query("UPDATE `cyrcontact_form` SET `resolved` = 1 WHERE `cyrcontact_form`.`id` = ?",[id],function(err, rows, fields){
    	var lastEmail = req.params.email;
    	console.log('/// START ROUTE TRAITEMENT DES MAILS');
        console.log('RECUPERATION MAIL---------->' + lastEmail);
    	// Si erreur
            console.log("QUERY ROUTE TRAITEMENT DES MAILS" + err);
            if (err != null) {
                message = "ERREUR QUERY ROUTE TRAITEMENT DES MAILS";
                console.log(message + ' ----- ' + err);                
            }
            else {
                // Sinon il n'y a pas d'erreur
                message = "UPDATE TRAITEMENT DES MAILS REUSSI";
                console.log('QUERY UPDATE RESOLVED : ' + message);
                // Si le user enregistré en session est different de nul (typeof verifie le type de données)
	            if (typeof req.user !== 'undefined'){
	                // Redirect twig avec un tableau qui récupère les éléments de username
	            	resp.redirect("/admin/message.html");
	            	
console.log('/// END ROUTE AFFICHAGE DES MAILS'); 

/// START ENVOI 2ème MAIL	            	
console.log('/// START ENVOI 2ème MAIL');				
				 var transporter = mailer.createTransport('smtps://'+cfg.MAIL.smtpuser+'%40gmail.com:'+cfg.MAIL.smtppassword+'@smtp.gmail.com');
	             var mailoptions ={                    
	                     from :"cyril.maipee@gmail.com",
	                     // Email: email récupéré
	                     to :lastEmail,                    
	                     Subject :"Nous avons bien reçu votre demande ",
	                     // Format texte
	                     text :"Bonjour, Nous vous remercions pour  votre confiance, votre demande vient d’être traitée par notre équipe et aurez de nos nouvelles dans les plus brefs délais. L’équipe Coffee-cup",
	                     // Format html
	                     html :"<p>Bonjour,<br />Nous vous remercions pour  votre confiance, votre demande vient d’être traitée par notre équipe et aurez de nos nouvelles dans les plus brefs délais.<br /> L’équipe Coffee-cup</p>"
	                     // Option obligatoire
	             }
	             transporter.sendMail(mailoptions,function(err,info){
	            	 
	                 // Si j'ai une erreur, je l'écris dans la console. Le "return" permet de sortir de la fonction et de ne pas afficher la suite
	                 if(err!= null) return console.log('ECHEC 2ème ENVOI MAIL DE CONFIRMATION DE TRAITEMENT DE LA DEMANDE -----> '+err);
		                 else{
		                	 console.log('REUSSITE 2ème ENVOI MAIL DE CONFIRMATION DE TRAITEMENT DE LA DEMANDE -----> ');
console.log('/// END ENVOI 2ème MAIL');	
		                 }	                	         			
	             });	            
	             // Fermeture de la connexion smtps
	             transporter.close();
	             resp.status(200).end(''+message);	
console.log('/// END ENVOI 2ème MAIL');	             
/// END ENVOI 2ème MAIL		            	
	            }
            	// Sinon je renvoie le user a la page login pour authentification
	            else {
	                resp.redirect("/login.html");
	            }         
        }
    });   
});

/// END ROUTE TRAITEMENT DES MAILS

// Exportation du module
module.exports = router;
